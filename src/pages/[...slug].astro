---
import BlogPost from "@/layouts/BlogPost.astro";
import { getLang, prevnexts } from "@/utils/content";
import { type CollectionEntry, getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const posts = (await getCollection("blog")).sort((a, b) =>
    a.data.order > b.data.order ? -1 : b.data.order > a.data.order ? 1 : 0,
  );
  const paths = posts.map((post, i) => ({
    params: { slug: post.id },
    props: {
      ...post,
      prevnext: {
        prev: i + 1 === posts.length ? "" : posts[i + 1].id,
        next: i === 0 ? "" : posts[i - 1].id,
      },
    },
  }));
  return paths;
}
type Props = CollectionEntry<"blog">;
const post = Astro.props;
const { Content } = await render(post);
const prevnext = prevnexts[getLang(post)][post.id];
---

<BlogPost
  {...{
    ...post.data,
    ...{
      prev: prevnext.prev ? prevnext.prev.id : undefined,
      next: prevnext.next ? prevnext.next.id : undefined,
    },
  }}
>
  <Content />
</BlogPost>
